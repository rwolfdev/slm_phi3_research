 ## Function Name: CountWords(string text)

### Description:
This function takes a string `text` as input and returns a `Dictionary<string, int>`, where each key represents a unique word found in the input text, and the corresponding value represents the frequency of that word in the text.

### Parameters:
1. `text` (string): The input string from which the word frequencies will be counted.

### Return Type:
- `Dictionary<string, int>`: A dictionary where each key is a unique word from the input text, and the corresponding value is the frequency of that word in the text.

### Functionality:
1. The function splits the input string into an array of words using the space character (' ') as the delimiter.
2. It then groups the words by their unique values using the `GroupBy` method.
3. Finally, it converts the grouped words into a dictionary using the `ToDictionary` method, where each key is the unique word and the corresponding value is the count of that word in the input text.

### Example:
```csharp
string inputText = "This is a sample text. This text contains sample words.";
Dictionary<string, int> wordCounts = CountWords(inputText);

// Output:
// {
//   { "This", 2 },
//   { "is", 1 },
//   { "a", 1 },
//   { "sample", 2 },
//   { "text.", 2 },
//   { "text", 1 },
//   { "contains", 1 },
//   { "words.", 1 }
// }
```

### Note:
- The function does not consider punctuation marks as part of the words. If you need to count words with punctuation, you may need to preprocess the input text to remove punctuation marks or use a more sophisticated tokenization method.
- The function is case-sensitive, meaning that "This" and "this" would be considered as two different words. If you need case-insensitive counting, consider converting the input text to lowercase or uppercase before processing.
- The function does not handle empty strings or null inputs. You may want to add error handling or validation to ensure the input is valid before processing.ï¿½