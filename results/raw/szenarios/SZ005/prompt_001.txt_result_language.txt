 # Patient Class Documentation

## Overview

The `Patient` class represents a patient's information in a healthcare system. It encapsulates the patient's first name, last name, date of birth, and insurance number. The class provides methods to calculate the patient's age, update the insurance number, and retrieve a string representation of the patient's information.

## Properties

### `_id`

A private read-only `Guid` field `_id` that uniquely identifies each patient instance.

### `FirstName`

A public read-only property that returns the patient's first name.

### `LastName`

A public read-only property that returns the patient's last name.

### `DateOfBirth`

A public read-only property that returns the patient's date of birth.

### `InsuranceNumber`

A public read-only property that returns the patient's insurance number. The setter is private, meaning it can only be modified within the class.

## Constructor

The `Patient` class has a single constructor that takes four parameters:

1. `firstName` (string): The patient's first name.
2. `lastName` (string): The patient's last name.
3. `dateOfBirth` (DateTime): The patient's date of birth.
4. `insuranceNumber` (string): The patient's insurance number.

The constructor initializes the `_id` field with a new `Guid`, and assigns the provided values to the `FirstName`, `LastName`, `DateOfBirth`, and `InsuranceNumber` properties.

## Methods

### `GetAge()`

A public method that calculates and returns the patient's age based on their date of birth and the current date. The age is calculated by subtracting the patient's birth year from the current year, and adjusting the age if the patient's birthday has not yet occurred in the current year.

### `UpdateInsurance(string newInsuranceNumber)`

A public method that updates the patient's insurance number. The method takes a string parameter `newInsuranceNumber` and assigns it to the `InsuranceNumber` property.

### `ToString()`

A public method that returns a string representation of the patient' elements. The string is formatted as "{FirstName} {LastName} ({DateOfBirth:yyyy-MM-dd})".

## Example Usage

```csharp
Patient patient = new Patient("John", "Doe", new DateTime(1990, 1, 1), "1234567890");
int age = patient.GetAge();
Console.WriteLine($"Patient: {patient}");
Console.WriteLine($"Age: {age}");

patient.UpdateInsurance("9876543210");
Console.WriteLine($"Updated Insurance Number: {patient.InsuranceNumber}");
```

This example creates a new `Patient` instance, calculates and prints the patient's age, prints the patient's string representation, and updates the patient's insurance number.ï¿½