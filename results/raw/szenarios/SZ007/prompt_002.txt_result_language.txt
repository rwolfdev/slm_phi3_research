 # FinancialDataHub Class Documentation

## Overview

The `FinancialDataHub` class is a derived class from `Microsoft.AspNetCore.SignalR.Hub` and is designed to facilitate real-time financial data updates and price information retrieval using the SignalR library.

## Properties

### `_latestPrices`

A static, thread-safe, and concurrent dictionary that stores the latest known prices for various financial symbols.

```csharp
private static readonly ConcurrentDictionary<string, decimal> _latestPrices = new();
```

## Methods

### `SendPriceUpdate(string symbol, decimal price)`

Asynchronously sends a price update for a given financial symbol to all connected clients.

```csharp
public async Task SendPriceUpdate(string symbol, decimal price)
{
    _latestPrices[symbol] = price;
    await Clients.All.SendAsync("ReceivePriceUpdate", symbol, price);
}
```

### `GetLastKnownPrice(string symbol)`

Asynchronously retrieves the last known price for a given financial symbol. Returns null if the symbol is not found in the `_latestPrices` dictionary.

```csharp
public decimal? GetLastKnownPrice(string symbol)
{
    if (_latestPrices.TryGetValue(symbol, out var price))
        return price;
    return null;
}
```

### `OnConnectedAsync()`

Overrides the `OnConnectedAsync` method from the base class to send a connection establishment message to the connected client.

```csharp
public override async Task OnConnectedAsync()
{
    await Clients.Caller.SendAsync("ConnectionEstablished", Context.ConnectionId);
    await base.OnConnectedAsync();
}
```

### `OnDisconnectedAsync(Exception? exception)`

Overrides the `OnDisconnectedAsync` method from the base class to send a user disconnection message to all connected clients and handle any exceptions that may occur during disconnection.

```csharp
public override async Task OnDisconnectedAsync(Exception? exception)
{
    await Clients.All.SendAsync("UserDisconnected", Context.ConnectionId);
    await base.OnDisconnectedAsync(exception);
}
```ï¿½