 # FinancialDataHub Class Documentation

## Purpose

The `FinancialDataHub` class is designed to facilitate real-time financial data updates and retrieval within a SignalR-based application. It extends the `SignalR.Hub` class, providing methods for sending price updates and fetching the latest known prices for financial symbols.

## Class Members

### Fields

- `_latestPrices`: A `ConcurrentDictionary<string, decimal>` that stores the latest known prices for various financial symbols.

### Methods

#### `SendPriceUpdate(string symbol, decimal price)`

Sends a real-time price update for a specified financial symbol to all connected clients.

- **Parameters**:
  - `symbol`: A string representing the financial symbol (e.g., "AAPL").
  - `price`: A decimal value representing the latest price of the financial symbol.

- **Returns**: None.

- **Description**: This method updates the `_latestPrices` dictionary with the provided price and sends the update to all connected clients using the `SendAsync` method.

#### `GetLastKnownPrice(string symbol)`

Retrieves the last known price for a specified financial symbol.

- **Parameters**:
  - `symbol`: A string representing the financial symbol (e.g., "AAPL").

- **Returns**: A `decimal?` value representing the last known price of the financial symbol, or `null` if the symbol is not found in the `_latestPrices` dictionary.

- **Description**: This method attempts to retrieve the latest price from the `_latestPrices` dictionary. If the symbol is not present, it returns `null`.

#### `OnConnectedAsync()`

An overridden method that is called when a client connects to the SignalR hub.

- **Returns**: `Task`.

- **Description**: This method sends a "ConnectionEstablished" message to the client that initiated the connection and then calls the base `OnConnectedAsync` method.

#### `OnDisconnectedAsync(Exception? exception)`

An overridden method that is called when a client disconnects from the SignalR hub.

- **Parameters**:
  - `exception`: An optional `Exception` object representing the reason for the disconnection, if any.

- **Returns**: `Task`.

- **Description**: This method sends a "UserDisconnected" message to all connected clients and then calls the base `OnDisconnectedAsync` method.

## Constraints

- The `_latestPrices` dictionary must be accessed and modified in a thread-safe manner.

- The `SendPriceUpdate` method must handle exceptions that may occur during the sending process.

- The `GetLastKnownPrice` method must handle the case where the symbol is not found in the `_latestPrices` dictionary.ï¿½