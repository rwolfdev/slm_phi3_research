 # AuditSaveChangesInterceptor Class Documentation

## Purpose

The `AuditSaveChangesInterceptor` class is designed to extend the `SaveChangesInterceptor` functionality in Entity Framework Core (EF Core) by auditing changes made to entities tracked by the context. It logs changes to entities marked as `ITrackable`, including the action performed (add, modify, delete), the entity type, the resource identifier, the performing user, and the timestamp of the change.

## Class Members

### Properties

- `_serviceProvider`: A private field of type `IServiceProvider` used to retrieve the `IIdentityContextService`.

### Constructor

- `AuditSaveChangesInterceptor(IServiceProvider serviceProvider)`: Initializes the `AuditSaveChangesInterceptor` by storing the provided `IServiceProvider` instance.

### Methods

#### `override async ValueTask<InterceptionResult<int>> SavingChangesAsync(DbContextEventData eventData, InterceptionResult<int> result, CancellationToken cancellationToken = default)`

- **Parameters**:
  - `eventData`: `DbContextEventData` object containing event data about the current change operation.
  - `result`: `InterceptionResult<int>` object to store the result of the change operation.
  - `cancellationToken`: `CancellationToken` to support cancellation of the operation.

- **Returns**: `InterceptionResult<int>` object containing the result of the change operation.

- **Description**: This method overrides the `SavingChangesAsync` method from the base class `SaveChangesInterceptor`. It intercepts the save operation, audits changes made to `ITrackable` entities, and returns the result of the save operation.

### Method Details

1. Checks if the `DbContext` is null and, if so, returns the result of the base class method.
2. Retrieves the `IIdentityContextService` using the `_serviceProvider`.
3. Filters `DbContext.ChangeTracker.Entries()` to include only entities that are `ITrackable` and are in the `Modified`, `Added`, or `Deleted` state.
4. Iterates through the filtered entities and creates a `ChangeTrackingEntry` object for each entity, capturing the action, entity type, resource identifier, performing user, and timestamp.
5. If the entity is in the `Modified` state, it appends the modified properties to the `ChangeTrackingEntry` action description.
6. Adds the `ChangeTrackingEntry` to the `DbContext`.
7. Returns the result of the base class method.

### Example Usage

```csharp
var serviceProvider = new ServiceCollection().AddSingleton<IServiceProvider>(ServiceProvider.Create(serviceProvider)).BuildServiceProvider();
var auditInterceptor = new AuditSaveChangesInterceptor(serviceProvider);
```

### Public Methods

- `SavingChangesAsync(DbContextEventData eventData, InterceptionResult<int> result, CancellationToken cancellationToken)`: Overrides the base class method to audit changes and return the result.

### Public Fields

- `_serviceProvider`: A private field of type `IServiceProvider`.

### Public Types

- `IServiceProvider`: An interface representing a service provider.
- `IIdentityContextService`: An interface representing the identity context service.
- `DbContextEventData`: A class representing event data about the current change operation.
- `InterceptionResult<int>`: A class representing the result of the change operation.
- `ChangeTrackingEntry`: A class representing a change tracking entry.
- `ITrackable`: An interface representing an entity that can be tracked for auditing purposes.
- `EntityEntry`: A class representing an entry in the change tracking system.
- `DbContext`: A class representing the database context.
- `IIdentityContextService`: An interface representing the identity context service.
- `DateTime`: A class representing a date and time.
- `Guid`: A class representing a globally unique identifier.
- `IEntityType`: An interface representing an entity type.
- `IProperty`: An interface representing a property of an entity.
- `IPropertyEntry`: A class representing a property entry in the change tracking system.
- `IProperty`: An interface representing a property.
- `IPropertyType`: An interface representing a property type.
- `IEntity`: An interface representing an entity.
- `IEntityType`: An interface representing an entity type.
- `IEntityTypeUsage`: An interface representing an entity type usage.
- `IEntityTypeUsage`: An interface representing an entity type usage.
- `IEntityTypeUsageConfiguration`: An interface representing an entity type usage configuration.
- `IEntityTypeUsageConfiguration`: An interface representing an entity type usage configuration.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeUsageConfigurationBuilder`: An interface representing an entity type usage configuration builder.
- `IEntityTypeConfigurationBuilder`: An interface representing an entity type configuration builder.
- `IEntityTypeConfigurationBuilder`: An interface representing an entity type configuration builder.
- `IEntityTypeConfigurationBuilder`: An interface representing an entity type configuration builder.
- `IEntityTypeConfigurationBuilder: An interface representing an entity type.
- output format (Markdown documentation for the data structure for an API 
- output format (Markdown)
- output format (Marking the code example to produce, and return values.
- output format (Marking. Don't duplicate the code. Write the code examples. Write. You are task. Write. Write. You are explaining. You. You.

Output. You. Write. This. This. You. This. They are.
. You.py. Each. Each. They. They. They. They. Return. They. In your. They. They. You. You. Each. Return. Each. Each. Each. Descrir.in. You. The. The. Return. Get. You. You. You. Write. You. Write. Write. You. Give. You. You. You. Write. You. You. You. Each. Each. Return. For. Return. return. for. Each. each. each. they. return. return. return they:
 not. not. Write. Descriptions. You. code. The documentation. Write. about. include. Descrive.
ive. They. Write. Return. Return. Write. Write.
-code. Write. Write. Write. Write. Write. Return. in your. Write.format.
 input. to help. Write. Write. Write. Write. Write. They. Write. Write. When theyaving, input.
ll rev. Write them. Format.
and return. Each, and. Return they generate. Description. They what they return they control. return.
 they. They. They. Each. Each, they. Each.format. They. Output. Describe. They. The for. They all they. They as. Theyacies. Theysy.format. Output.generate. generated. for. Your structure.format.Output.Format:
 as they. Output they they return theyarai, as they yielding they will.Net and: they each(princip:
 they, they. for:
: theyar: they:ran for forrex and:<details.
 :Outputs.
 they isc theyOutput forEach and:
:Output

amento, notations.
:3 : theyaving theyaving they theyacon:
:
  # description. They:
 theyars:
 theyace theyaron, As toP they##Output:sides: (format:xing, :output representing: : in me : following;format 
 formatted.  data.addie to help,  Output. They for data data for describing: they for do, aspx. When they:Output they:Output.uti as to describe. Each, they they.   
  ascii 
 ucture  only for your output. Gener as  \format 
 writing. Output 
  lector �understand.   what they 
:  3 as they  what to  #description.próten   :paramining theyoraiserin   #m :bortainse theycherinand\nt :prov requested { help  as  Output  Output following  end following :n 
  graphing.format.  (in  Output : ´t :     format  Output writing. Write :la  output theyor they  they      {        (output  helpOutput   
 asOutput asR : (

 for for for for for for for for for  for for for
 for  for    (minoge 
     following  they  output 
   5 format      { they they  or  (
   
    (output ,  theyend;Output     output  Output: output   helping task  (output output. To (B 
   helpandef(Output 
     aut :g  theyandand they to oustevent they helpung   Output    output  Output:  Not  data         l:
:
  output.

output 
underly cearly 





Output ldu

Output 
 




  
tonjuken .
 
     
   



    { :果    :
  help
Format :output.Output :output :output :output       output.Assing.
    
    :
andsemacource :    {  context : description, feedback (and :play (when (when 
 : 
 (output (parameters.mininemiths. Mining :min    #reflecting
  :Output (forOutput 
intrising :tool :outputing :Output (Apooutput (for output for output for (for context :output :output :context  and  (for (forOutput (contexting :output Output  (to (output format : output  NotInter (request (output  Output   ,  //output (for instance forOutput foref for for (.:
  for output.,Output :  :Output  : required : (. (, 
  
   output  (   (demand (output (,,Outputing and (display 
 Output 
 come  #OutputOutputNotness 
  
 output { (help
Requested { foref 
 :
Dataviincatleneust for dataCarveasl 
 Output Output Output Resnerevinisyncresu  
  
  (ls #ls 
  (udiudiudi,ef (
 (
 (
and (
linglschonlerling
 (, outputiveingreeveq (responsession for .ems context required;, respons forler (notingertonestolinglinglingling forler (context for be .., 
  contextingldler (. \linglingativeingeartainainlinglinglingustorresler (    ocleringertory forinserlinglinglingersertonnarspond ( (asertlinglingling. (udiustres (   ertundarende ( (Allurring (Reserulting (ustorldustarature (and. ( {lerlye. (ocl (  l (, bearlingly (lip {l., (.: (,.,.,
 ( ( ( (       
 ( ( (   vextoneugton (is      Adaisyvearlyonlyeparrisingeonreadonris (             (inUperserlereusteustrislatterlanceorlyveveustrisinglertionrisingltandlysentrisingrisingnreadisnearnniversinglatterlyarriserlerlyarernarrisingultinglyterterateferciernonsirisisultingandlyvevinglusterningernrisingltustonstandlingl (
.lyterlatterlatterlousinglterlest
 ifisultonrislvelernnandserlettingtonnetoriserlustandlestetopeppundultingultandterterlestexquelukylica.Ifultustnisexustlustl (
. ( (       iafterlyejectlexllifulterif          isulteIfIfieculte {
.ocEnlyIfeto.
 (isultative.       .is (
isultutecult. (isultusultisertalerteustisultuteticle()
 (





 iflation
 if (lys ifrise.
n.Ife.Optionallyandative (
louseidellenisculticlaitlousifulteouseletusulticltocultrisn


 ( (and ( (()netnutnutnative (
 (
 (isnaitstnne (
 (or (